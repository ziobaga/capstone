@using System.Security.Claims
@model Capstone.Models.Chats

<div class="row justify-content-center">
    <div class="col-12 col-md-10 col-lg-8">
        <div class="bg-custom rounded p-5 my-4 mx-3 shadow">
            <div class="text-center mb-4">
                <h2 class="text-green">Chat della Partita</h2>
            </div>

            <!-- Messaggio di conferma registrazione -->
            <p class="alert alert-success">Sei stato registrato correttamente a questa partita!</p>

            <!-- Dettagli della partita -->
            <hr class="myBorder" />
            <div class="mb-4">
                <h4 class="mb-3">Dettagli della Partita</h4>
                <p><strong>Data:</strong> @Model.Partita.DataInizio.ToString("dd/MM/yyyy")</p>
                <p><strong>Ora Inizio:</strong> @Model.Partita.OraInizio.ToString(@"hh\:mm")</p>
                <p><strong>Ora Fine:</strong> @Model.Partita.OraFine.ToString(@"hh\:mm")</p>
                <p><strong>Campo:</strong> @Model.Partita.Campo.NomeCampo, @Model.Partita.Campo.Città</p>
            </div>

            <!-- Partecipanti -->
            <hr class="myBorder" />
            <div class="mb-4">
                <h4 class="mb-3">Partecipanti</h4>
                @if (Model.Partita.Partecipanti != null && Model.Partita.Partecipanti.Any())
                {
                    <ul class="list-group">
                        @foreach (var partecipante in Model.Partita.Partecipanti)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <!-- Nome del partecipante cliccabile -->
                                <a href="@Url.Action("ViewProfile", "Profile", new { userId = partecipante.Id })" class="text-decoration-none" style="color: #58ae82;">
                                    @partecipante.Nome @partecipante.Cognome (@partecipante.Email)
                                </a>
                                @if (partecipante.Id == int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)))
                                {
                                    <a href="@Url.Action("Details", "Profile")" class="btn firstButton btn-sm">Il mio profilo</a>
                                }
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>Non ci sono partecipanti registrati per questa partita.</p>
                }
            </div>

            <!-- Sezione Chat -->
            <hr class="myBorder" />
            <div class="mb-4">
                <h4 class="mb-3">Chat</h4>
                <div id="chatMessages" class="border p-3 rounded bg-light" style="height: 300px; overflow-y: scroll;">
                    <ul id="messagesList" class="list-unstyled">
                        @foreach (var messaggio in Model.Messaggi)
                        {
                            <li>
                                <strong>@messaggio.Mittente.Nome:</strong> @messaggio.Testo
                                <small class="text-muted">(@messaggio.DataInvio.ToString("dd/MM/yyyy HH:mm"))</small>
                            </li>
                        }
                    </ul>
                </div>

                <!-- Input per inviare messaggi -->
                <div class="input-group mt-3">
                    <input type="text" id="messageInput" class="form-control" placeholder="Scrivi un messaggio..." />
                    <button id="sendButton" class="btn firstButton">Invia</button>
                </div>
            </div>

            <div class="d-flex justify-content-between">
                <a asp-controller="Match" asp-action="MatchList" class="btn secondButton">Torna alla Lista</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.3/signalr.min.js"></script>
    <script type="text/javascript">
        const matchId = @Model.PartitaId;
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub?matchId=" + matchId) // Passa l'ID della partita come query string
            .build();

        // Ricevi un messaggio dal server e aggiungilo alla lista
        connection.on("ReceiveMessage", function (user, message) {
            const msg = document.createElement("li");
            msg.textContent = `${user}: ${message}`;
            document.getElementById("messagesList").appendChild(msg);
        });

        // Avvia la connessione SignalR
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        // Invia un messaggio quando il bottone "Invia" è premuto
        document.getElementById("sendButton").addEventListener("click", function (event) {
            const user = '@User.Identity.Name'; // Prendi il nome dell'utente corrente
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", matchId, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });
    </script>
}