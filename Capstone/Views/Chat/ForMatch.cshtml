@using System.Security.Claims
@model Capstone.Models.Chats

<h2>Chat della Partita</h2>

<!-- Messaggio di conferma registrazione -->
<p class="alert alert-success">Sei stato registrato correttamente a questa partita!</p>

<!-- Dettagli della partita -->
<h3>Dettagli della Partita</h3>
<div>
    <p><strong>Data:</strong> @Model.Partita.DataInizio.ToString("dd/MM/yyyy")</p>
    <p><strong>Ora Inizio:</strong> @Model.Partita.OraInizio.ToString(@"hh\:mm")</p>
    <p><strong>Ora Fine:</strong> @Model.Partita.OraFine.ToString(@"hh\:mm")</p>
    <p><strong>Campo:</strong> @Model.Partita.Campo.NomeCampo, @Model.Partita.Campo.Città</p>
</div>

<!-- Sezione partecipanti -->
<h3>Partecipanti</h3>
@if (Model.Partita.Partecipanti != null && Model.Partita.Partecipanti.Any())
{
    <ul>
        @foreach (var partecipante in Model.Partita.Partecipanti)
        {
            <li>
                @partecipante.Nome @partecipante.Cognome (@partecipante.Email)
                @if (partecipante.Id == int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)))
                {
                    <!-- Se l'utente clicca sul proprio profilo, reindirizza ai dettagli con pulsante modifica -->
                    <a href="@Url.Action("Details", "Profile")" class="btn btn-info">Il mio profilo</a>
                }
                else
                {
                    <!-- Se l'utente clicca sul profilo di un altro partecipante, visualizza "ViewProfile" -->
                    <a href="@Url.Action("ViewProfile", "Profile", new { userId = partecipante.Id })" class="btn btn-info">Vedi profilo</a>
                }
            </li>
        }
    </ul>
}
else
{
    <p>Non ci sono partecipanti registrati per questa partita.</p>
}

<!-- Chat -->
<hr />
<h3>Chat</h3>
<div id="chatMessages">
    <ul id="messagesList">
        @foreach (var messaggio in Model.Messaggi)
        {
            <li><strong>@messaggio.Mittente.Nome:</strong> @messaggio.Testo (@messaggio.DataInvio.ToString("dd/MM/yyyy hh:mm"))</li>
        }
    </ul>
</div>

<input type="text" id="messageInput" placeholder="Scrivi un messaggio..." />
<button id="sendButton">Invia</button>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.3/signalr.min.js"></script>
    <script type="text/javascript">
        const matchId = @Model.PartitaId;
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub?matchId=" + matchId) // Passa l'ID della partita come query string
            .build();

        // Ricevi un messaggio dal server e aggiungilo alla lista
        connection.on("ReceiveMessage", function (user, message) {
            const msg = document.createElement("li");
            msg.textContent = `${user}: ${message}`;
            document.getElementById("messagesList").appendChild(msg);
        });

        // Avvia la connessione SignalR
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        // Invia un messaggio quando il bottone "Invia" è premuto
        document.getElementById("sendButton").addEventListener("click", function (event) {
            const user = '@User.Identity.Name'; // Prendi il nome dell'utente corrente
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", matchId, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });
    </script>
}
